/**
 * name: tui-vue-log
 * version: v0.0.2
 * description: vue log tool
 * author: babytutu
 * homepage: https://github.com/babytutu/tui-vue-log
 */
(function(d,f){typeof exports=="object"&&typeof module<"u"?module.exports=f():typeof define=="function"&&define.amd?define(f):(d=typeof globalThis<"u"?globalThis:d||self,d.log=f())})(this,function(){"use strict";function d(t,e){var r=t==null?null:typeof Symbol<"u"&&t[Symbol.iterator]||t["@@iterator"];if(r!=null){var n,s,i,l,u=[],c=!0,v=!1;try{if(i=(r=r.call(t)).next,e===0){if(Object(r)!==r)return;c=!1}else for(;!(c=(n=i.call(r)).done)&&(u.push(n.value),u.length!==e);c=!0);}catch(b){v=!0,s=b}finally{try{if(!c&&r.return!=null&&(l=r.return(),Object(l)!==l))return}finally{if(v)throw s}}return u}}function f(t,e){return S(t)||d(t,e)||w(t,e)||I()}function S(t){if(Array.isArray(t))return t}function w(t,e){if(t){if(typeof t=="string")return m(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);if(r==="Object"&&t.constructor&&(r=t.constructor.name),r==="Map"||r==="Set")return Array.from(t);if(r==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return m(t,e)}}function m(t,e){(e==null||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function I(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}return{install:function(e,r){var n=r||{},s=n.border,i=s===void 0?"4px":s,l=n.background,u=l===void 0?["#606060","#409EFF"]:l,c=n.style,v=c||"padding: 4px 8px; color: #fff;",b=Number(e.version.split(".")[0]);function A(O){var x="";if(b>2){var o,a,k=(e==null||(o=e.config)===null||o===void 0||(o=o.globalProperties)===null||o===void 0||(o=o.$route)===null||o===void 0?void 0:o.matched)||[],E=f(k,1),T=E[0],h=T===void 0?{}:T;x=(h==null||(a=h.components)===null||a===void 0||(a=a.default)===null||a===void 0?void 0:a.__file)||""}for(var g=arguments.length,j=new Array(g>1?g-1:0),y=1;y<g;y++)j[y-1]=arguments[y];console.log("%c".concat(O,"%c").concat(JSON.stringify(j)),"border-radius: ".concat(i," 0 0 ").concat(i,"; background: ").concat(u[0],"; ").concat(v),"border-radius: 0 ".concat(i," ").concat(i," 0; background: ").concat(u[1],"; ").concat(v),x.replace(/.*\/src(.*$)/,"$1"))}b>2?e.provide("log",A):e.prototype.log=A}}});
