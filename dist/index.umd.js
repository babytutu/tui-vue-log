/**
 * name: tui-vue-log
 * version: v0.0.3
 * description: vue log tool
 * author: babytutu
 * homepage: https://github.com/babytutu/tui-vue-log
 */
(function(c,f){typeof exports=="object"&&typeof module<"u"?module.exports=f():typeof define=="function"&&define.amd?define(f):(c=typeof globalThis<"u"?globalThis:c||self,c.log=f())})(this,function(){"use strict";function c(r,e){var t=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(t!=null){var n,s,i,l,u=[],a=!0,v=!1;try{if(i=(t=t.call(r)).next,e===0){if(Object(t)!==t)return;a=!1}else for(;!(a=(n=i.call(t)).done)&&(u.push(n.value),u.length!==e);a=!0);}catch(b){v=!0,s=b}finally{try{if(!a&&t.return!=null&&(l=t.return(),Object(l)!==l))return}finally{if(v)throw s}}return u}}function f(r,e){return I(r)||c(r,e)||O(r,e)||k()}function I(r){if(Array.isArray(r))return r}function O(r,e){if(r){if(typeof r=="string")return m(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);if(t==="Object"&&r.constructor&&(t=r.constructor.name),t==="Map"||t==="Set")return Array.from(r);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return m(r,e)}}function m(r,e){(e==null||e>r.length)&&(e=r.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=r[t];return n}function k(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}return{install:function(e,t){var n=t||{},s=n.border,i=s===void 0?"4px":s,l=n.background,u=l===void 0?["#606060","#409EFF"]:l,a=n.style,v=n.display,b=v===void 0?!0:v,A=a||"padding: 4px 8px; color: #fff;",x=Number(e.version.split(".")[0]);function T(E){var j="";if(x>2){var o,d,F=(e==null||(o=e.config)===null||o===void 0||(o=o.globalProperties)===null||o===void 0||(o=o.$route)===null||o===void 0?void 0:o.matched)||[],N=f(F,1),S=N[0],h=S===void 0?{}:S;j=(h==null||(d=h.components)===null||d===void 0||(d=d.default)===null||d===void 0?void 0:d.__file)||""}for(var g=arguments.length,w=new Array(g>1?g-1:0),y=1;y<g;y++)w[y-1]=arguments[y];b&&console.log("%c".concat(E,"%c").concat(JSON.stringify(w)),"border-radius: ".concat(i," 0 0 ").concat(i,"; background: ").concat(u[0],"; ").concat(A),"border-radius: 0 ".concat(i," ").concat(i," 0; background: ").concat(u[1],"; ").concat(A),j.replace(/.*\/src(.*$)/,"$1"))}x>2?e.provide("log",T):e.prototype.log=T}}});
